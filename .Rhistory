summarise(ftc = max(Def1)) %>%
left_join(diff_metadata_ftc_temps) %>%
dplyr::select(site_pos, season, ftc, temp_diff, biome_Whittaker, elevation.m, site_name_full) %>%
na.omit()
ftc_top_50 =
ftc_4_1_5C %>%
filter(depth_m > -0.5) %>%
rename(plot = core_pos)
ftc_top_50 =
ftc_4_1_5C %>%
filter(depth_m > -0.5) %>%
rename(plot = core_pos) %>%
group_by(site_pos, plot) %>%
summarise(ftc = max(Def1)) %>%
left_join(diff_metadata_ftc_temps) %>%
dplyr::select(site_pos, season, ftc, temp_diff, biome_Whittaker, elevation.m, site_name_full) %>%
na.omit()
om_thickness =
sommos_om %>%
#distinguish organic horizons
dplyr::mutate(organic = case_when(grepl("O", horizon)~"organic")) %>%
#filter out sites without any organic horizons
filter(organic == organic) %>%
#get the maximum and minimum organic depth within each plot
group_by(site_ID, plot) %>%
dplyr::summarise(max_cm = max(bottom_depth.cm),
min_cm = min(bottom_depth.cm)) %>%
ungroup() %>%
rename(site_pos = site_ID)
om_airtemp_ftc =
ftc_top_50 %>%
left_join(om_thickness)
ftc_top_50 =
ftc_4_1_5C %>%
filter(depth_m > -0.5) %>%
rename(plot = core_pos) %>%
group_by(site_pos, plot) %>%
summarise(ftc = max(Def1)) %>%
left_join(diff_metadata_ftc_temps) %>%
dplyr::select(site_pos, plot, season, ftc, temp_diff, biome_Whittaker, elevation.m, site_name_full) %>%
na.omit()
om_thickness =
sommos_om %>%
#distinguish organic horizons
dplyr::mutate(organic = case_when(grepl("O", horizon)~"organic")) %>%
#filter out sites without any organic horizons
filter(organic == organic) %>%
#get the maximum and minimum organic depth within each plot
group_by(site_ID, plot) %>%
dplyr::summarise(max_cm = max(bottom_depth.cm),
min_cm = min(bottom_depth.cm)) %>%
ungroup() %>%
rename(site_pos = site_ID)
om_airtemp_ftc =
ftc_top_50 %>%
left_join(om_thickness)
View(om_airtemp_ftc)
View(sommos_om)
View(sommos_om)
om_thickness =
sommos_om %>%
#distinguish organic horizons
dplyr::mutate(surface_material = case_when(grepl("O", horizon)~"organic")) %>%
#filter out sites without any organic horizons
filter(organic == organic) %>%
#get the maximum and minimum organic depth within each plot
group_by(site_ID, plot) %>%
dplyr::summarise(max_cm = max(bottom_depth.cm),
min_cm = min(bottom_depth.cm)) %>%
ungroup() %>%
rename(site_pos = site_ID)
om_thickness =
sommos_om %>%
#distinguish organic horizons
dplyr::mutate(organic = case_when(grepl("O", horizon)~"organic")) %>%
#filter out sites without any organic horizons
filter(organic == organic) %>%
#get the maximum and minimum organic depth within each plot
group_by(site_ID, plot) %>%
dplyr::summarise(max_cm = max(bottom_depth.cm),
min_cm = min(bottom_depth.cm)) %>%
ungroup() %>%
rename(site_pos = site_ID)
om_mapping =
sommos_om %>%
#distinguish organic horizons
dplyr::mutate(surface_material = case_when(grepl("O", horizon)~"organic")) %>%
#filter out sites without any organic horizons
#filter(organic == organic) %>%
#get the maximum and minimum organic depth within each plot
group_by(site_ID, plot) %>%
ungroup() %>%
rename(site_pos = site_ID)
om_mapping =
sommos_om %>%
#distinguish organic horizons
dplyr::mutate(surface_material = case_when(grepl("O", horizon)~"organic")) %>%
#filter out sites without any organic horizons
#filter(organic == organic) %>%
#get the maximum and minimum organic depth within each plot
group_by(site_ID, plot) %>%
ungroup() %>%
rename(site_pos = site_ID) %>%
left_join(om_thickness)
View(om_mapping)
om_mapping =
sommos_om %>%
#distinguish organic horizons
dplyr::mutate(surface_material = case_when(grepl("O", horizon)~"organic")) %>%
#filter out sites without any organic horizons
#filter(organic == organic) %>%
#get the maximum and minimum organic depth within each plot
group_by(site_ID, plot) %>%
ungroup() %>%
rename(site_pos = site_ID) %>%
left_join(om_thickness) %>%
mutate(site_plot = paste0(site_pos, "-", plot))
om_mapping %>%
ggplot()+
geom_col(aes(y = thickness.cm, x = site_plot, fill = Horizon), color = "black", position = 'stack', width = 0.7)+
# omthickness_ftcfig =
#   om_thickness %>%
#   #filter(ftc > 0) %>%
#   ggplot()+
#   geom_point(aes(x = ftc, y = max_cm, color = biome_Whittaker))+
#   labs(x = "Freeze-thaw cycles", y = "maximum OM thickness (cm)")+
#   facet_wrap(.~season, scales = "free_y")+
#   scale_color_manual(values = natparks.pals(name = "Yellowstone", 6))+
#   theme_er()+
#   theme(legend.position = "bottom", axis.text.x = element_text (vjust = 0.5, hjust=1, angle = 90, size = 9),
#         panel.border = element_rect(color="white",size=2, fill = NA))
# ggsave("output/OMthickness_ftc.png", plot = omthickness_ftcfig, height = 6, width = 10)
om_airtemp_ftc =
ftc_top_50 %>%
left_join(om_thickness)
om_mapping =
sommos_om %>%
#distinguish organic horizons
dplyr::mutate(surface_material = case_when(grepl("O", horizon)~"organic")) %>%
#filter out sites without any organic horizons
#filter(organic == organic) %>%
#get the maximum and minimum organic depth within each plot
group_by(site_ID, plot) %>%
ungroup() %>%
rename(site_pos = site_ID) %>%
left_join(om_thickness) %>%
mutate(site_plot = paste0(site_pos, "-", plot)) %>%
left_join(metadata)
om_mapping =
sommos_om %>%
#distinguish organic horizons
dplyr::mutate(material = case_when(grepl("O", horizon)~"organic")) %>%
dplyr::mutate(material = if_else(organic,paste0("organic",material),"mineral"))
om_mapping =
sommos_om %>%
#distinguish organic horizons
dplyr::mutate(material = case_when(grepl("O", horizon)~"organic")) %>%
dplyr::mutate(grouping = if_else(material == "organic", "organic", "mineral"))
om_mapping =
sommos_om %>%
#distinguish organic horizons
dplyr::mutate(material = case_when(grepl("O", horizon)~"organic")) %>%
dplyr::mutate(grouping = if_else(grepl("O", horizon)~"organic", "organic", "mineral"))
om_mapping =
sommos_om %>%
#distinguish organic horizons
dplyr::mutate(material = case_when(grepl("O", horizon)~"organic"),
material = case_when(grepl("A", horizon)~"mineral"),
material = case_when(grepl("B", horizon)~"mineral"),
material = case_when(grepl("C", horizon)~"mineral"),
material = case_when(grepl("E", horizon)~"mineral")
) %>%
dplyr::mutate(grouping = if_else(material == "organic", "organic", "mineral"))
om_mapping =
sommos_om %>%
#distinguish organic horizons
dplyr::mutate(material = case_when(grepl("O", horizon)~"organic"),
material = case_when(grepl("A", horizon)~"mineral"),
material = case_when(grepl("B", horizon)~"mineral"),
material = case_when(grepl("C", horizon)~"mineral"),
material = case_when(grepl("E", horizon)~"mineral")
)
om_mapping =
sommos_om %>%
#distinguish organic horizons
dplyr::mutate(material = case_when(grepl("O", horizon)~"organic"),
material = case_when(grepl("A", horizon)~"mineral"),
material = case_when(grepl("B", horizon)~"mineral"),
material = case_when(grepl("C", horizon)~"mineral"),
material = case_when(grepl("E", horizon)~"mineral")
)
om_mapping =
sommos_om %>%
#distinguish organic horizons
dplyr::mutate(material = case_when(grepl("O", horizon)~"organic"),
grepl("A", horizon)~"mineral",
grepl("B", horizon)~"mineral",
grepl("C", horizon)~"mineral",
grepl("E", horizon)~"mineral"
)
#distinguish organic horizons
dplyr::mutate(material = case_when(grepl("O", horizon)~"organic",
om_mapping =
sommos_om %>%
#distinguish organic horizons
dplyr::mutate(material = case_when(grepl("O", horizon)~"organic",
grepl("A", horizon)~"mineral",
grepl("B", horizon)~"mineral",
grepl("C", horizon)~"mineral",
grepl("E", horizon)~"mineral"))
View(om_mapping)
View(om_mapping)
om_mapping =
sommos_om %>%
#distinguish organic horizons
dplyr::mutate(material = case_when(grepl("O", horizon)~"organic",
grepl("A", horizon)~"mineral",
grepl("B", horizon)~"mineral",
grepl("C", horizon)~"mineral"))
om_mapping =
sommos_om %>%
#distinguish organic horizons
dplyr::mutate(material = case_when(grepl("O", horizon)~"organic",
grepl("A", horizon)~"mineral",
grepl("B", horizon)~"mineral",
grepl("C", horizon)~"mineral")) %>%
#filter out sites without any organic horizons
#filter(organic == organic) %>%
#get the maximum and minimum organic depth within each plot
rename(site_pos = site_ID) %>%
left_join(om_thickness) %>%
mutate(site_plot = paste0(site_pos, "-", plot)) %>%
left_join(metadata)
om_mapping %>%
ggplot()+
geom_col(aes(y = thickness.cm, x = site_plot), fill = "material", fill = "white", position = 'stack', width = 0.7)+
labs(fill = "", color = "",
y = "depth, cm",
x = "plot")+
#scale_fill_manual(values = c("#D6AB7D", "#B3895D", "#B3895D", "#734F38", "#553725", "#482919", "#482919"))+
theme_er1()+
theme(axis.text.x = element_text (vjust = 0.5, hjust=1, angle = 90, size = 9), legend.position = "right")+
facet_grid(Area~Site, scales="free")
om_mapping %>%
ggplot()+
geom_col(aes(y = thickness.cm, x = site_plot), fill = "material", fill = "white", position = 'stack', width = 0.7)+
labs(fill = "", color = "",
y = "depth, cm",
x = "plot")+
#scale_fill_manual(values = c("#D6AB7D", "#B3895D", "#B3895D", "#734F38", "#553725", "#482919", "#482919"))+
theme_er()+
theme(axis.text.x = element_text (vjust = 0.5, hjust=1, angle = 90, size = 9), legend.position = "right")+
facet_grid(Area~Site, scales="free")
om_mapping =
sommos_om %>%
#distinguish organic horizons
dplyr::mutate(material = case_when(grepl("O", horizon)~"organic",
grepl("A", horizon)~"mineral",
grepl("B", horizon)~"mineral",
grepl("C", horizon)~"mineral")) %>%
#filter out sites without any organic horizons
#filter(organic == organic) %>%
#get the maximum and minimum organic depth within each plot
rename(site_pos = site_ID) %>%
left_join(om_thickness) %>%
rename(thickness_cm = thickness.cm) %>%
mutate(site_plot = paste0(site_pos, "-", plot)) %>%
left_join(metadata)
om_mapping %>%
ggplot()+
geom_col(aes(y = thickness_cm, x = site_plot), fill = "material", fill = "white", position = 'stack', width = 0.7)+
labs(fill = "", color = "",
y = "depth, cm",
x = "plot")+
#scale_fill_manual(values = c("#D6AB7D", "#B3895D", "#B3895D", "#734F38", "#553725", "#482919", "#482919"))+
theme_er()+
theme(axis.text.x = element_text (vjust = 0.5, hjust=1, angle = 90, size = 9), legend.position = "right")+
facet_grid(Area~Site, scales="free")
om_mapping %>%
ggplot()+
geom_col(aes(y = thickness_cm, x = site_plot, fill = material), position = 'stack', width = 0.7)+
labs(fill = "", color = "",
y = "depth, cm",
x = "plot")+
#scale_fill_manual(values = c("#D6AB7D", "#B3895D", "#B3895D", "#734F38", "#553725", "#482919", "#482919"))+
theme_er()+
theme(axis.text.x = element_text (vjust = 0.5, hjust=1, angle = 90, size = 9), legend.position = "right")+
facet_grid(Area~Site, scales="free")
om_mapping %>%
ggplot()+
geom_col(aes(y = thickness_cm, x = site_plot, fill = material), position = 'stack', width = 0.7)+
labs(fill = "", color = "",
y = "depth, cm",
x = "plot")+
#scale_fill_manual(values = c("#D6AB7D", "#B3895D", "#B3895D", "#734F38", "#553725", "#482919", "#482919"))+
theme_er()+
theme(axis.text.x = element_text (vjust = 0.5, hjust=1, angle = 90, size = 9), legend.position = "right")+
facet_grid(.~Biome_whittaker, scales="free")
om_mapping %>%
ggplot()+
geom_col(aes(y = thickness_cm, x = site_plot, fill = material), position = 'stack', width = 0.7)+
labs(fill = "", color = "",
y = "depth, cm",
x = "plot")+
#scale_fill_manual(values = c("#D6AB7D", "#B3895D", "#B3895D", "#734F38", "#553725", "#482919", "#482919"))+
theme_er()+
theme(axis.text.x = element_text (vjust = 0.5, hjust=1, angle = 90, size = 9), legend.position = "right")+
facet_grid(.~Biome_whittaker)
om_mapping =
sommos_om %>%
#distinguish organic horizons
dplyr::mutate(material = case_when(grepl("O", horizon)~"organic",
grepl("A", horizon)~"mineral",
grepl("B", horizon)~"mineral",
grepl("C", horizon)~"mineral")) %>%
#filter out sites without any organic horizons
#filter(organic == organic) %>%
#get the maximum and minimum organic depth within each plot
rename(site_pos = site_ID) %>%
left_join(om_thickness) %>%
rename(thickness_cm = thickness.cm) %>%
mutate(site_plot = paste0(site_pos, "-", plot)) %>%
left_join(metadata)
om_mapping %>%
ggplot()+
geom_col(aes(y = thickness_cm, x = site_plot, fill = material), position = 'stack', width = 0.7)+
labs(fill = "", color = "",
y = "depth, cm",
x = "plot")+
#scale_fill_manual(values = c("#D6AB7D", "#B3895D", "#B3895D", "#734F38", "#553725", "#482919", "#482919"))+
theme_er()+
theme(axis.text.x = element_text (vjust = 0.5, hjust=1, angle = 90, size = 9), legend.position = "right")+
facet_grid(.~Biome_whittaker)
om_mapping %>%
ggplot()+
geom_col(aes(y = thickness_cm, x = site_plot, fill = material), position = 'stack', width = 0.7)+
labs(fill = "", color = "",
y = "depth, cm",
x = "plot")+
#scale_fill_manual(values = c("#D6AB7D", "#B3895D", "#B3895D", "#734F38", "#553725", "#482919", "#482919"))+
theme_er()
om_mapping %>%
ggplot()+
geom_col(aes(y = thickness_cm, x = site_plot, fill = material), position = 'stack', stat = "identity", width = 0.7)+
labs(fill = "", color = "",
y = "depth, cm",
x = "plot")+
facet_grid(.~Biome_whittaker) +
#scale_fill_manual(values = c("#D6AB7D", "#B3895D", "#B3895D", "#734F38", "#553725", "#482919", "#482919"))+
theme_er()+
theme(axis.text.x = element_text (vjust = 0.5, hjust=1, angle = 90, size = 9), legend.position = "right")
om_mapping %>%
ggplot()+
geom_col(aes(y = thickness_cm, x = site_plot, fill = material), position = 'stack', width = 0.7)+
labs(fill = "", color = "",
y = "depth, cm",
x = "plot")+
facet_grid(.~Biome_whittaker) +
#scale_fill_manual(values = c("#D6AB7D", "#B3895D", "#B3895D", "#734F38", "#553725", "#482919", "#482919"))+
theme_er()+
theme(axis.text.x = element_text (vjust = 0.5, hjust=1, angle = 90, size = 9), legend.position = "right")
om_mapping %>%
ggplot()+
geom_col(aes(y = thickness_cm, x = site_plot, fill = material), position = 'stack', width = 0.7)+
labs(fill = "", color = "",
y = "depth, cm",
x = "plot")+
facet_grid(.~ Biome_whittaker) +
#scale_fill_manual(values = c("#D6AB7D", "#B3895D", "#B3895D", "#734F38", "#553725", "#482919", "#482919"))+
theme_er()+
theme(axis.text.x = element_text (vjust = 0.5, hjust=1, angle = 90, size = 9), legend.position = "right")
om_mapping %>%
ggplot()+
geom_col(aes(y = thickness_cm, x = site_plot, fill = material), position = 'stack', width = 0.7)+
labs(fill = "", color = "",
y = "depth, cm",
x = "plot")+
facet_grid(.~ 'Biome_whittaker') +
#scale_fill_manual(values = c("#D6AB7D", "#B3895D", "#B3895D", "#734F38", "#553725", "#482919", "#482919"))+
theme_er()+
theme(axis.text.x = element_text (vjust = 0.5, hjust=1, angle = 90, size = 9), legend.position = "right")
om_mapping %>%
ggplot()+
geom_col(aes(y = thickness_cm, x = site_plot, fill = material), position = 'stack', width = 0.7)+
labs(fill = "", color = "",
y = "depth, cm",
x = "plot")+
facet_wrap(~ Biome_whittaker) +
#scale_fill_manual(values = c("#D6AB7D", "#B3895D", "#B3895D", "#734F38", "#553725", "#482919", "#482919"))+
theme_er()+
theme(axis.text.x = element_text (vjust = 0.5, hjust=1, angle = 90, size = 9), legend.position = "right")
om_mapping %>%
ggplot()+
geom_col(aes(y = thickness_cm, x = site_plot, fill = material), position = 'stack', width = 0.7)+
labs(fill = "", color = "",
y = "depth, cm",
x = "plot")+
facet_wrap(biome_Whittaker ~ .)+
#scale_fill_manual(values = c("#D6AB7D", "#B3895D", "#B3895D", "#734F38", "#553725", "#482919", "#482919"))+
theme_er()+
theme(axis.text.x = element_text (vjust = 0.5, hjust=1, angle = 90, size = 9), legend.position = "right")
om_mapping %>%
filter(biome_Whittaker == "Boreal forest") %>%
ggplot()+
geom_col(aes(y = thickness_cm, x = site_plot, fill = material), position = 'stack', width = 0.7)+
labs(fill = "", color = "",
y = "depth, cm",
x = "plot")+
facet_wrap(biome_Whittaker ~ .)+
#scale_fill_manual(values = c("#D6AB7D", "#B3895D", "#B3895D", "#734F38", "#553725", "#482919", "#482919"))+
theme_er()+
theme(axis.text.x = element_text (vjust = 0.5, hjust=1, angle = 90, size = 9), legend.position = "right")
om_mapping %>%
filter(biome_Whittaker == "Boreal forest") %>%
ggplot()+
geom_col(aes(y = thickness_cm, x = site_plot, fill = material), group = site_plot, position = 'stack', width = 0.7)+
labs(fill = "", color = "",
y = "depth, cm",
x = "plot")+
facet_wrap(biome_Whittaker ~ .)+
#scale_fill_manual(values = c("#D6AB7D", "#B3895D", "#B3895D", "#734F38", "#553725", "#482919", "#482919"))+
theme_er()+
theme(axis.text.x = element_text (vjust = 0.5, hjust=1, angle = 90, size = 9), legend.position = "right")
om_mapping =
sommos_om %>%
#distinguish organic horizons
dplyr::mutate(material = case_when(grepl("O", horizon)~"organic",
grepl("A", horizon)~"mineral",
grepl("B", horizon)~"mineral",
grepl("C", horizon)~"mineral")) %>%
#filter out sites without any organic horizons
#filter(organic == organic) %>%
#get the maximum and minimum organic depth within each plot
rename(site_pos = site_ID) %>%
left_join(om_thickness) %>%
rename(thickness_cm = thickness.cm) %>%
mutate(site_plot = paste0(site_pos, "-", plot)) %>%
left_join(metadata) %>%
group_by(site_plot)
om_mapping %>%
filter(biome_Whittaker == "Boreal forest") %>%
ggplot()+
geom_col(aes(y = thickness_cm, x = site_plot, fill = material), group = site_plot, position = 'stack', width = 0.7)+
labs(fill = "", color = "",
y = "depth, cm",
x = "plot")+
facet_wrap(biome_Whittaker ~ .)+
#scale_fill_manual(values = c("#D6AB7D", "#B3895D", "#B3895D", "#734F38", "#553725", "#482919", "#482919"))+
theme_er()+
theme(axis.text.x = element_text (vjust = 0.5, hjust=1, angle = 90, size = 9), legend.position = "right")
om_mapping =
sommos_om %>%
#distinguish organic horizons
dplyr::mutate(material = case_when(grepl("O", horizon)~"organic",
grepl("A", horizon)~"mineral",
grepl("B", horizon)~"mineral",
grepl("C", horizon)~"mineral")) %>%
#filter out sites without any organic horizons
#filter(organic == organic) %>%
#get the maximum and minimum organic depth within each plot
rename(site_pos = site_ID) %>%
rename(thickness_cm = thickness.cm) %>%
mutate(site_plot = paste0(site_pos, "-", plot)) %>%
left_join(metadata) %>%
group_by(site_plot)
om_mapping %>%
filter(biome_Whittaker == "Boreal forest") %>%
ggplot()+
geom_col(aes(y = thickness_cm, x = site_plot, fill = material), group = site_plot, position = 'stack', width = 0.7)+
labs(fill = "", color = "",
y = "depth, cm",
x = "plot")+
facet_wrap(biome_Whittaker ~ .)+
#scale_fill_manual(values = c("#D6AB7D", "#B3895D", "#B3895D", "#734F38", "#553725", "#482919", "#482919"))+
theme_er()+
theme(axis.text.x = element_text (vjust = 0.5, hjust=1, angle = 90, size = 9), legend.position = "right")
om_mapping %>%
filter(biome_Whittaker == "Boreal forest") %>%
ggplot()+
geom_col(aes(y = thickness_cm, x = site_plot, fill = material), group = site_plot, position = 'stack', width = 0.7)+
labs(fill = "", color = "",
y = "depth, cm",
x = "plot")+
facet_wrap(biome_Whittaker ~ .)+
#scale_fill_manual(values = c("#D6AB7D", "#B3895D", "#B3895D", "#734F38", "#553725", "#482919", "#482919"))+
theme_er()+
theme(axis.text.x = element_text (vjust = 0.5, hjust=1, angle = 90, size = 9), legend.position = "right")
om_mapping =
sommos_om %>%
#distinguish organic horizons
dplyr::mutate(material = case_when(grepl("O", horizon)~"organic",
grepl("A", horizon)~"mineral",
grepl("B", horizon)~"mineral",
grepl("C", horizon)~"mineral")) %>%
#filter out sites without any organic horizons
#filter(organic == organic) %>%
#get the maximum and minimum organic depth within each plot
rename(site_pos = site_ID) %>%
rename(thickness_cm = thickness.cm) %>%
mutate(site_plot = paste0(site_pos, "-", plot)) %>%
left_join(metadata)
om_mapping %>%
filter(biome_Whittaker == "Boreal forest") %>%
ggplot()+
geom_col(aes(y = thickness_cm, x = site_plot, fill = material), group = site_plot, position = 'stack', width = 0.7)+
labs(fill = "", color = "",
y = "depth, cm",
x = "plot")+
facet_wrap(biome_Whittaker ~ .)+
#scale_fill_manual(values = c("#D6AB7D", "#B3895D", "#B3895D", "#734F38", "#553725", "#482919", "#482919"))+
theme_er()+
theme(axis.text.x = element_text (vjust = 0.5, hjust=1, angle = 90, size = 9), legend.position = "right")
